apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: {{ .Values.compositionName }}
  labels:
    provider: gcp
    vpc: shared
    cluster: gke
spec:
  compositeTypeRef:
    apiVersion: gcp.eql.com/v1alpha1
    kind: XGKECluster
  writeConnectionSecretsToNamespace: crossplane-system
  patchSets:
    - name: common-parameters
      patches:
        - fromFieldPath: "spec.parameters.region"
          toFieldPath: "spec.forProvider.location"
        - fromFieldPath: "spec.parameters.projectId"
          toFieldPath: "spec.forProvider.projectID"
  resources:
    # GKE Cluster and NodePool sections unchanged...
    # Only HelmReleases updated with kubeConfig.secretRef

    # 3. Helm Repository for Cert Manager
    - name: cert-manager-repo
      base:
        apiVersion: helm.crossplane.io/v1beta1
        kind: HelmRepository
        metadata:
          name: cert-manager-repo
        spec:
          url: https://charts.jetstack.io
      patches:
        - fromFieldPath: "spec.parameters.clusterName"
          toFieldPath: "metadata.name"
          transforms:
            - type: string
              string:
                fmt: "%s-cert-manager-repo"
      readinessChecks:
        - type: None

    # 4. Helm Release for Cert Manager
    - name: cert-manager
      base:
        apiVersion: helm.crossplane.io/v1beta1
        kind: HelmRelease
        metadata:
          name: cert-manager
        spec:
          chart:
            name: cert-manager
            repository: cert-manager-repo
            version: v1.12.0
          namespace: cert-manager
          createNamespace: true
          kubeConfig:
            source: Secret
            secretRef:
              namespace: crossplane-system
              name: gke-cluster-connection
              key: kubeconfig
          values:
            installCRDs: true
            global:
              leaderElection:
                namespace: cert-manager
      patches:
        - fromFieldPath: "spec.parameters.clusterName"
          toFieldPath: "metadata.name"
          transforms:
            - type: string
              string:
                fmt: "%s-cert-manager"
        - fromFieldPath: "spec.parameters.addons.certManager.enabled"
          toFieldPath: "spec.chart.name"
          policy:
            fromFieldPath: Required
          transforms:
            - type: map
              map:
                if:
                  ==:
                    - fromValue: false
                    - value: false
                then: null
                else: cert-manager
      readinessChecks:
        - type: None

    # 5. Helm Repository for Kyverno
    - name: kyverno-repo
      base:
        apiVersion: helm.crossplane.io/v1beta1
        kind: HelmRepository
        metadata:
          name: kyverno-repo
        spec:
          url: https://kyverno.github.io/kyverno/
      patches:
        - fromFieldPath: "spec.parameters.clusterName"
          toFieldPath: "metadata.name"
          transforms:
            - type: string
              string:
                fmt: "%s-kyverno-repo"
      readinessChecks:
        - type: None

    # 6. Helm Release for Kyverno
    - name: kyverno
      base:
        apiVersion: helm.crossplane.io/v1beta1
        kind: HelmRelease
        metadata:
          name: kyverno
        spec:
          chart:
            name: kyverno
            repository: kyverno-repo
            version: v2.7.2
          namespace: kyverno
          createNamespace: true
          kubeConfig:
            source: Secret
            secretRef:
              namespace: crossplane-system
              name: gke-cluster-connection
              key: kubeconfig
      patches:
        - fromFieldPath: "spec.parameters.clusterName"
          toFieldPath: "metadata.name"
          transforms:
            - type: string
              string:
                fmt: "%s-kyverno"
        - fromFieldPath: "spec.parameters.addons.kyverno.enabled"
          toFieldPath: "spec.chart.name"
          policy:
            fromFieldPath: Required
          transforms:
            - type: map
              map:
                if:
                  ==:
                    - fromValue: false
                    - value: false
                then: null
                else: kyverno
      readinessChecks:
        - type: None

    # 7. Helm Repository for External Secrets
    - name: external-secrets-repo
      base:
        apiVersion: helm.crossplane.io/v1beta1
        kind: HelmRepository
        metadata:
          name: external-secrets-repo
        spec:
          url: https://charts.external-secrets.io
      patches:
        - fromFieldPath: "spec.parameters.clusterName"
          toFieldPath: "metadata.name"
          transforms:
            - type: string
              string:
                fmt: "%s-external-secrets-repo"
      readinessChecks:
        - type: None

    # 8. Helm Release for External Secrets
    - name: external-secrets
      base:
        apiVersion: helm.crossplane.io/v1beta1
        kind: HelmRelease
        metadata:
          name: external-secrets
        spec:
          chart:
            name: external-secrets
            repository: external-secrets-repo
            version: v0.8.1
          namespace: external-secrets
          createNamespace: true
          kubeConfig:
            source: Secret
            secretRef:
              namespace: crossplane-system
              name: gke-cluster-connection
              key: kubeconfig
          values:
            serviceAccount:
              annotations:
                iam.gke.io/gcp-service-account: external-secrets-sa@{{ .Values.gcp.projectId }}.iam.gserviceaccount.com
      patches:
        - fromFieldPath: "spec.parameters.clusterName"
          toFieldPath: "metadata.name"
          transforms:
            - type: string
              string:
                fmt: "%s-external-secrets"
        - fromFieldPath: "spec.parameters.addons.externalSecrets.enabled"
          toFieldPath: "spec.chart.name"
          policy:
            fromFieldPath: Required
          transforms:
            - type: map
              map:
                if:
                  ==:
                    - fromValue: false
                    - value: false
                then: null
                else: external-secrets
        - fromFieldPath: "spec.parameters.projectId"
          toFieldPath: "spec.values.serviceAccount.annotations[iam\.gke\.io/gcp-service-account]"
          transforms:
            - type: string
              string:
                fmt: "external-secrets-sa@%s.iam.gserviceaccount.com"
      readinessChecks:
        - type: None

    # 9. Helm Repository for Prometheus
    - name: prometheus-repo
      base:
        apiVersion: helm.crossplane.io/v1beta1
        kind: HelmRepository
        metadata:
          name: prometheus-repo
        spec:
          url: https://prometheus-community.github.io/helm-charts
      patches:
        - fromFieldPath: "spec.parameters.clusterName"
          toFieldPath: "metadata.name"
          transforms:
            - type: string
              string:
                fmt: "%s-prometheus-repo"
      readinessChecks:
        - type: None

    # 10. Helm Release for Prometheus
    - name: prometheus
      base:
        apiVersion: helm.crossplane.io/v1beta1
        kind: HelmRelease
        metadata:
          name: prometheus
        spec:
          chart:
            name: kube-prometheus-stack
            repository: prometheus-repo
            version: v45.7.1
          namespace: monitoring
          createNamespace: true
          kubeConfig:
            source: Secret
            secretRef:
              namespace: crossplane-system
              name: gke-cluster-connection
              key: kubeconfig
          values:
            grafana:
              enabled: true
              adminPassword: "admin-password"
            prometheus:
              prometheusSpec:
                retention: 10d
                resources:
                  requests:
                    memory: 1Gi
                storageSpec:
                  volumeClaimTemplate:
                    spec:
                      storageClassName: standard
                      resources:
                        requests:
                          storage: 50Gi
      patches:
        - fromFieldPath: "spec.parameters.clusterName"
          toFieldPath: "metadata.name"
          transforms:
            - type: string
              string:
                fmt: "%s-prometheus"
        - fromFieldPath: "spec.parameters.addons.prometheus.enabled"
          toFieldPath: "spec.chart.name"
          policy:
            fromFieldPath: Required
          transforms:
            - type: map
              map:
                if:
                  ==:
                    - fromValue: false
                    - value: false
                then: null
                else: kube-prometheus-stack
      readinessChecks:
        - type: None