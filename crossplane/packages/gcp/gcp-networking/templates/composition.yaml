apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: gcp-networking
spec:
  compositeTypeRef:
    apiVersion: networking.enginevector.io/v1alpha1
    kind: XGCPNetworking
  resources:
    - name: shared-vpc
      base:
        apiVersion: compute.gcp.crossplane.io/v1beta1
        kind: Network
        spec:
          forProvider:
            autoCreateSubnetworks: false
            routingConfig:
              routingMode: REGIONAL
          providerConfigRef:
            name: "{{ .Values.networking.providerConfig }}"
      patches:
        - fromFieldPath: "spec.sharedVpcName"
          toFieldPath: "metadata.name"
        - fromFieldPath: "spec.projectId"
          toFieldPath: "spec.forProvider.project"

    - name: firewall-rules
      base:
        apiVersion: compute.gcp.crossplane.io/v1beta1
        kind: Firewall
        spec:
          forProvider:
            direction: INGRESS
            networkSelector:
              matchControllerRef: true
            allowed: "{{ .Values.networking.firewallRules }}"
          providerConfigRef:
            name: "{{ .Values.networking.providerConfig }}"
      patches:
        - fromFieldPath: "spec.projectId"
          toFieldPath: "spec.forProvider.project"

    - name: private-link
      condition: "{{ .Values.networking.privateLink }}"
      base:
        apiVersion: servicenetworking.gcp.crossplane.io/v1beta1
        kind: Connection
        spec:
          forProvider:
            networkSelector:
              matchControllerRef: true
            reservedPeeringRanges: "{{ .Values.networking.reservedPeeringRanges }}"
          providerConfigRef:
            name: "{{ .Values.networking.providerConfig }}"
      patches:
        - fromFieldPath: "spec.projectId"
          toFieldPath: "spec.forProvider.project"