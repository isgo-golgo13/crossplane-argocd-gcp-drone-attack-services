# Build stage
FROM node:20-alpine AS build

# Set working directory
WORKDIR /app

# Check https://github.com/nodejs/docker-node/tree/b4117f9333da4138b03a546ec926ef50a31506c3#nodealpine for understanding why libc6-compat is needed
RUN apk add --no-cache libc6-compat

# Copy package files
COPY aws-eks-self-service-portal/package.json frontend/package-lock.json* ./

# Install dependencies
RUN npm ci

# Copy application source
COPY frontend/ .

# Set environment variables
ENV VITE_API_URL="http://backend:8080/api"

# Build the application
RUN npm run build

# Runtime stage
FROM node:20-alpine AS runtime

# Create a non-root user
RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 svelteuser

# Set working directory
WORKDIR /app

# Copy built assets from the build stage
COPY --from=build --chown=svelteuser:nodejs /app/build ./
COPY --from=build --chown=svelteuser:nodejs /app/package.json /app/package-lock.json* ./

# Install only production dependencies
RUN npm ci --omit=dev

# Switch to non-root user
USER svelteuser

# Expose the port
EXPOSE 3000

# Start the application
ENV NODE_ENV=production
ENV HOST=0.0.0.0
ENV PORT=3000

CMD ["node", "index.js"]
